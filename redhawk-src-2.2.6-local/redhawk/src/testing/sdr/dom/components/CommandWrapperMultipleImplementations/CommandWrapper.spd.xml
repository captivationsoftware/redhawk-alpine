<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is protected by Copyright. Please refer to the COPYRIGHT file 
distributed with this source distribution.

This file is part of REDHAWK core.

REDHAWK core is free software: you can redistribute it and/or modify it under 
the terms of the GNU Lesser General Public License as published by the Free 
Software Foundation, either version 3 of the License, or (at your option) any 
later version.

REDHAWK core is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR 
A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more 
details.

You should have received a copy of the GNU Lesser General Public License along 
with this program.  If not, see http://www.gnu.org/licenses/.
-->

<!DOCTYPE softpkg PUBLIC '-//JTRS//DTD SCA V2.2.2 SPD//EN' 'softpkg.dtd'>
<softpkg id="DCE:458872f6-a316-4082-b1eb-ce5704f5c49d" name="CommandWrapperMultipleImplementations">
    <title/>
    <author>
        <name>REDHAWK test author</name>
    </author>
    <description>A python script that can wrap a non-sca command.  This is useful because
    OSSIE doesn't support components with the non-sca-compliant type.
    </description> 
    <propertyfile type="PRF">
        <localfile name="CommandWrapper.prf.xml"/>
    </propertyfile>
    <descriptor>
        <localfile name="CommandWrapper.scd.xml"/>
    </descriptor>
    <!-- Test multiple implementations, but make sure only the last one will match -->
    <implementation id="DCE:0fab575e-6cfc-47ad-913f-68c599a49350">
        <description>The command wraper executable uses a property to determine
        which command to launch when start is called.
        </description> 
        <code type="Executable">
            <localfile name="CommandWrapper.py"/>
            <entrypoint>CommandWrapper.py</entrypoint>
        </code>
        <os name="Windows"/> <!-- Yeah right -->
        <processor name="x86"/>
    </implementation>
    <implementation id="DCE:f175154d-07b5-42f7-a804-148527a3f775">
        <description>The command wraper executable uses a property to determine
        which command to launch when start is called.
        </description> 
        <code type="Executable">
            <localfile name="CommandWrapper.py"/>
            <entrypoint>CommandWrapper.py</entrypoint>
        </code>
        <os name="Linux"/>
        <processor name="ppc"/>
    </implementation>
    <implementation id="DCE:535a68a7-64e4-424b-9045-5ffc7659bf9d">
        <description>The command wraper executable uses a property to determine
        which command to launch when start is called.
        </description> 
        <code type="Executable">
            <localfile name="CommandWrapper.py"/>
            <entrypoint>CommandWrapper.py</entrypoint>
        </code>
        <os name="Linux"/>
        <processor name="x86"/>
        <!--                                       -->
        <!-- Test a variety of matching properties -->
        <!--                                       -->
        <dependency type="device_matching">
            <!-- Check DeviceKind -->
            <propertyref refid="DCE:7f36cdfb-f828-4e4f-b84f-446e17f1a85b" value="BasicTestDevice"/>
        </dependency>
        <dependency type="device_matching">
            <!-- Check HasXMIDAS -->
            <propertyref refid="DCE:021f10cf-7a05-46ec-a507-04b513b84bd4" value="true"/>
        </dependency>
        <dependency type="device_matching">
            <!-- Provide RunsAs -->
            <propertyref refid="DCE:64303822-4c67-4c04-9a5c-bf670f27cf39" value="ossie"/>
        </dependency>
        <dependency type="device_matching">
            <!-- Check ProvidedCpuCores is at least 4-->
            <propertyref refid="DCE:ac73446e-f935-40b6-8b8d-4d9adb6b403f" value="4"/>
        </dependency>
        <dependency type="device_matching">
            <!-- Check CoreClockRateGHz is less than 4.0 GHz-->
            <propertyref refid="DCE:dd339b67-b387-4018-94d2-9a72955d85b9" value="4.0"/>
        </dependency>
        <!--                                                  -->
        <!-- Test some basic 'external' allocation properties -->
        <!--                                                  -->
        <dependency type="runtime_requirements">
            <!-- Consume memory capacity -->
            <propertyref refid="DCE:8dcef419-b440-4bcf-b893-cab79b6024fb" 
                         value="__MATH__(100000,DCE:fa8c5924-845c-484a-81df-7941f2c5baa9,*)"/>
        </dependency>
        <dependency type="runtime_requirements">
            <!-- BogoMips capacity -->
            <propertyref refid="DCE:5636c210-0346-4df7-a5a3-8fd34c5540a8" value="1000"/>
        </dependency>
    </implementation>
</softpkg>
