<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is protected by Copyright. Please refer to the COPYRIGHT file 
distributed with this source distribution.

This file is part of REDHAWK core.

REDHAWK core is free software: you can redistribute it and/or modify it under 
the terms of the GNU Lesser General Public License as published by the Free 
Software Foundation, either version 3 of the License, or (at your option) any 
later version.

REDHAWK core is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR 
A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more 
details.

You should have received a copy of the GNU Lesser General Public License along 
with this program.  If not, see http://www.gnu.org/licenses/.
-->

<!DOCTYPE properties PUBLIC "-//JTRS//DTD SCA V2.2.2 PRF//EN" "properties.dtd">
<properties>
  <simple id="my_bool_true" mode="readwrite" type="boolean">
    <value>true</value>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_bool_false" mode="readwrite" type="boolean">
    <value>false</value>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_bool_empty" mode="readwrite" type="boolean">
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_long" mode="readwrite" type="long">
    <value>10</value>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_long_empty" mode="readwrite" type="long">
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_str" mode="readwrite" type="string">
    <value>Hello World!</value>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_str_empty" mode="readwrite" type="string">
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <struct id="my_struct" mode="readwrite">
    <simple id="bool_true" type="boolean">
      <value>true</value>
    </simple>
    <simple id="bool_false" mode="readwrite" type="boolean">
      <value>false</value>
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="bool_empty" mode="readwrite" type="boolean">
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="long_s" mode="readwrite" type="long">
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="str_s" mode="readwrite" type="string">
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="enum_bool" mode="readwrite" type="boolean">
      <enumerations>
        <enumeration label="VALID" value="true"/>
        <enumeration label="INVALID" value="false"/>
      </enumerations>
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="enum_str" mode="readwrite" type="string">
      <enumerations>
        <enumeration label="ONE" value="first"/>
        <enumeration label="TWO" value="second"/>
        <enumeration label="THREE" value="third"/>
      </enumerations>
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="enum_long" mode="readwrite" type="long">
      <enumerations>
        <enumeration label="ONE" value="1"/>
        <enumeration label="TWO" value="2"/>
        <enumeration label="THREE" value="3"/>
      </enumerations>
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="es::3" mode="readwrite" type="long">
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <configurationkind kindtype="configure"/>
  </struct>
  <simplesequence id="my_seq_bool" mode="readwrite" type="boolean">
    <values>
      <value>true</value>
      <value>false</value>
    </values>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simplesequence>
  <simplesequence id="my_seq_str" mode="readwrite" type="string">
    <values>
      <value>one</value>
      <value></value>
      <value>three</value>
    </values>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simplesequence>
  <simple id="my_long_enum" mode="readwrite" type="long">
    <enumerations>
      <enumeration label="ONE" value="11"/>
      <enumeration label="TWO" value="22"/>
      <enumeration label="THREE" value="33"/>
    </enumerations>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_str_enum" mode="readwrite" type="string">
    <enumerations>
      <enumeration label="ONE" value="FIRST"/>
      <enumeration label="TWO" value="SECOND"/>
      <enumeration label="THREE" value="THIRD"/>
    </enumerations>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="my_bool_enum" mode="readwrite" type="boolean">
    <enumerations>
      <enumeration label="VALID" value="True"/>
      <enumeration label="INVALID" value="False"/>
    </enumerations>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <struct id="escape::struct" mode="readwrite">
    <simple id="es::1" type="long"/>
    <simple id="es::2" mode="readwrite" type="long">
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="normal" mode="readwrite" type="long">
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <configurationkind kindtype="configure"/>
  </struct>
  <simple id="escape::simple" mode="readwrite" type="long">
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <structsequence id="my_struct_seq" mode="readwrite">
    <struct id="struct_good">
      <simple id="simp::bad" type="long"/>
      <simple id="simp_bool" mode="readwrite" type="boolean">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
    </struct>
    <structvalue>
      <simpleref refid="simp::bad" value="0"/>
      <simpleref refid="simp_bool" value="false"/>
    </structvalue>
    <structvalue>
      <simpleref refid="simp::bad" value="0"/>
      <simpleref refid="simp_bool" value="false"/>
    </structvalue>
    <configurationkind kindtype="configure"/>
  </structsequence>
  <structsequence id="escape::structseq" mode="readwrite">
    <struct id="es::ss">
      <simple id="val::1" type="long"/>
      <simple id="val_2" mode="readwrite" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
    </struct>
    <structvalue>
      <simpleref refid="val::1" value="0"/>
      <simpleref refid="val_2" value=""/>
    </structvalue>
    <structvalue>
      <simpleref refid="val::1" value="0"/>
      <simpleref refid="val_2" value=""/>
    </structvalue>
    <configurationkind kindtype="configure"/>
  </structsequence>
  <simple id="readonly_simp" mode="readonly" type="string">
    <value>Read only simple prop</value>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simplesequence id="readonly_seq" mode="readonly" type="string">
    <values>
      <value>read only</value>
      <value>sequence property</value>
    </values>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simplesequence>
  <struct id="readonly_struct" mode="readonly">
    <simple id="readonly_struct_simp" type="string">
      <value>read only struct property</value>
    </simple>
    <configurationkind kindtype="configure"/>
  </struct>
  <structsequence id="readonly_structseq" mode="readonly">
    <struct id="readonly_ss">
      <simple id="readonly_s" type="string"/>
    </struct>
    <structvalue>
      <simpleref refid="readonly_s" value="read only"/>
    </structvalue>
    <structvalue>
      <simpleref refid="readonly_s" value="struct seq property"/>
    </structvalue>
    <configurationkind kindtype="configure"/>
  </structsequence>
</properties>
